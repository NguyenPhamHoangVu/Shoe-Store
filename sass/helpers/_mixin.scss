// Button styles
@mixin styleButton(
  $bg,
  $color,
  $border-width: 1px,
  $padding: 0.375rem 0.75rem,
  $radius: $border-radius,
  $shadow: none,
  $hover-bg: darken($bg, 10%)
) {
  background-color: $bg;
  color: $color;
  padding: $padding;
  border: $border-width solid $bg;
  border-radius: $radius;
  box-shadow: $shadow;
  transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out,
    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  cursor: pointer;

  &:hover {
    background-color: $hover-bg;
    color: $color;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 0.2rem rgba($bg, 0.5);
  }
}

@mixin primaryButton() {
  font-weight: bold;

  @include styleButton(
    $bg: $light-color,
    $color: $dark-color,
    $radius: 25px,
    $padding: 0.5rem 1.7rem
  );

  &:hover {
    background-color: $secondary-color;
    color: white;
    border-color: $secondary-color;
    transition: all 0.5s;
  }

  @media (max-width: 576px) {
    font-size: 10px;

    @include styleButton(
      $bg: $light-color,
      $color: $dark-color,
      $radius: 25px,
      $padding: 0.2rem 1rem
    );

    &:hover {
      background-color: $secondary-color;
      color: white;
      border-color: $secondary-color;
      transition: all 0.5s;
    }
  }
}

@mixin secondaryButton() {
  font-weight: bold;
  background-color: $light-color;
  color: $dark-color;
  border: 1px solid $dark-color;
  border-radius: 25px;
  padding: 0.5rem 1.7rem;

  &.active,
  &:hover {
    background-color: $secondary-color;
    color: $light-color;
    border-color: $secondary-color;
  }
}

@mixin tertiaryButton() {
  font-weight: bold;
  background-color: $secondary-color;
  color: $light-color;
  border: 1px solid $secondary-color;
  border-radius: 25px;
  padding: 0.5rem 1.7rem;

  &.active,
  &:hover {
    background-color: lighten($secondary-color, 10%);
    color: $light-color;
    border-color: $secondary-color;
  }
}

// Icon Button styles
@mixin styleIconButton(
  $size: 2rem,
  $bg: $primary-color,
  $color: #fff,
  $border-radius: 50%,
  $padding: 0.5rem,
  $shadow: $box-shadow,
  $hover-bg: darken($bg, 10%)
) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: $size;
  height: $size;
  background-color: $bg;
  color: $color;
  border: none;
  border-radius: $border-radius;
  padding: $padding;
  box-shadow: $shadow;
  transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
  cursor: pointer;

  &:hover {
    background-color: $hover-bg;
    color: $color;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 0.2rem rgba($bg, 0.5);
  }

  i,
  svg {
    font-size: 1rem;
    display: block;
  }
}

// Text styles
@mixin styleText($fs, $fw, $color, $line-height: 1.5, $transform: none) {
  font-size: $fs;
  font-weight: $fw;
  color: $color;
  line-height: $line-height;
  text-transform: $transform;
}

// Text decoration
@mixin textDecoration($decoration) {
  text-decoration: $decoration;
}

// Flexbox container
@mixin flexContainer(
  $justify: center,
  $align: center,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

// Grid container
@mixin gridContainer($columns, $gap: $spacer) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-gap: $gap;
}

// Grid item
@mixin gridItem($column-span: 1) {
  grid-column: span $column-span;
}

// Box shadow
@mixin boxShadow($x, $y, $blur, $spread, $color) {
  box-shadow: $x $y $blur $spread $color;
}

// Margin and padding
@mixin spacing($margin: 0, $padding: 0) {
  margin: $margin;
  padding: $padding;
}

// Border radius
@mixin borderRadius($radius: $border-radius) {
  border-radius: $radius;
}

// Transitions
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

// Background gradient
@mixin gradientBg($start-color, $end-color, $direction: to bottom) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// Visibility
@mixin visibility($visibility: visible) {
  visibility: $visibility;
}

// Display
@mixin display($display: block) {
  display: $display;
}

// Position
@mixin position(
  $position: relative,
  $top: auto,
  $right: auto,
  $bottom: auto,
  $left: auto
) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// Overflow
@mixin overflow($overflow: visible) {
  overflow: $overflow;
}

// Text alignment
@mixin textAlign($align: left) {
  text-align: $align;
}

// Opacity
@mixin opacity($opacity: 1) {
  opacity: $opacity;
}

// Z-index
@mixin zIndex($z-index: 1) {
  z-index: $z-index;
}

// Sizing
@mixin size($width: auto, $height: auto) {
  width: $width;
  height: $height;
}

// Flex properties
@mixin flex($grow: 1, $shrink: 1, $basis: 0%) {
  flex: $grow $shrink $basis;
}

// Alignment
@mixin alignSelf($align: auto) {
  align-self: $align;
}

// Order
@mixin order($order: 0) {
  order: $order;
}

// Float
@mixin float($float: none) {
  float: $float;
}

// Clearfix
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Hide element
@mixin hide {
  display: none !important;
}

// Typography
@mixin typography {
  body {
    font-family: $font-family-base;
    font-size: $text-base;
    font-weight: $font-weight-base;
    line-height: $line-height-base;
    color: $dark-color;
    text-align: left;
    background-color: $light-color;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-bottom: 0.5rem;
    font-weight: 500;
    line-height: 1.2;
    font-family: $font-family-base;
  }

  h1 {
    font-size: $text-4xl;
  }
  h2 {
    font-size: $text-3xl;
  }
  h3 {
    font-size: $text-2xl;
  }
  h4 {
    font-size: $text-xl;
  }
  h5 {
    font-size: $text-lg;
  }
  h6 {
    font-size: $text-base;
  }

  p {
    margin-top: 0;
    margin-bottom: 1rem;
  }
}
